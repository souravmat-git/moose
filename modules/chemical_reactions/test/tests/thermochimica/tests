[Tests]
  [MoRu]
    type = Exodiff
    input = MoRu.i
    exodiff = MoRu_out.e
    design = 'ChemicalCompositionAction.md ThermochimicaNodalData.md'
    issues = '#22711'
    requirement = 'The system shall be able to set up a nodal thermochemistry solve using an action'

    rel_err = 1e-3 # this is the same error thermochimica uses for its internal tests
    required_submodule = 'contrib/thermochimica'
  []

  [MoRu_reinit]
    type = Exodiff
    input = MoRu.i
    exodiff = MoRu_out.e
    design = 'ChemicalCompositionAction.md ThermochimicaNodalData.md'
    issues = '#22711'
    requirement = 'The system shall be able to use reinitialization to speed up a nodal thermochimica solve'
    cli_args = 'ChemicalComposition/thermo/reinitialization_type=time'
    rel_err = 1e-3 # this is the same error thermochimica uses for its internal tests
    required_submodule = 'contrib/thermochimica'
  []

  [MoRu_FV]
    type = Exodiff
    input = MoRu.i
    exodiff = MoRu_FV_out.e
    design = 'ChemicalCompositionAction.md ThermochimicaNodalData.md'
    issues = '#25877'
    requirement = 'The system shall be able to set up an elemental thermochemistry solve using an action'
    cli_args = 'ChemicalComposition/thermo/is_fv=true Outputs/file_base=MoRu_FV_out'
    rel_err = 1e-3 # this is the same error thermochimica uses for its internal tests
    required_submodule = 'contrib/thermochimica'
  []

  [MoRu_FV_reinit]
    type = Exodiff
    input = MoRu.i
    exodiff = MoRu_FV_out.e
    design = 'ChemicalCompositionAction.md ThermochimicaNodalData.md'
    issues = '#25877'
    requirement = 'The system shall be able to use reinitialization to speed up an elemental thermochimica solve'
    cli_args = 'ChemicalComposition/thermo/reinitialization_type=time ChemicalComposition/thermo/is_fv=true Outputs/file_base=MoRu_FV_out'
    rel_err = 1e-3 # this is the same error thermochimica uses for its internal tests
    required_submodule = 'contrib/thermochimica'
  []

  [MoRu_subblock]
    type = Exodiff
    input = MoRu_subblock.i
    exodiff = MoRu_subblock_out.e
    design = 'CommonChemicalCompositionAction.md '
    issues = '#26376'
    requirement = 'The system shall be able to run different instances of Thermochimica on different sub-blocks'
    rel_err = 1e-3 # this is the same error thermochimica uses for its internal tests
    required_submodule = 'contrib/thermochimica'
  []

  [MoRuPd]
    type = Exodiff
    input = MoRuPd.i
    exodiff = MoRuPd_out.e
    design = 'ThermochimicaNodalData.md'
    issues = '#25661'
    requirement = 'The system shall be able to use graciously handle a missing element in Thermochimica'
    rel_err = 1e-3 # this is the same error thermochimica uses for its internal tests
    required_submodule = 'contrib/thermochimica'
  []

  [csv_ic]
    type = Exodiff
    input = csv_ic.i
    exodiff = csv_ic_out.e
    design = 'ChemicalCompositionAction.md ThermochimicaNodalData.md'
    issues = '#22711'
    requirement = 'The system shall be able to set up constant initial conditions from a CSV file'
    cli_args = 'ChemicalComposition/tunit=K ChemicalComposition/punit=atm ChemicalComposition/munit=moles ChemicalComposition/output_species_unit=moles'
    rel_err = 1e-3 # this is the same error thermochimica uses for its internal tests
    required_submodule = 'contrib/thermochimica'
  []

  [FeTiVO]
    type = Exodiff
    input = FeTiVO.i
    exodiff = FeTiVO_out.e
    design = 'ChemicalCompositionAction.md ThermochimicaNodalData.md'
    issues = '#24552'
    requirement = 'The system shall be able to use pairs as MQMQA phase species'
    cli_args = 'ChemicalComposition/thermo/output_species_unit=moles Outputs/exodus=true'

    rel_err = 1e-3 # this is the same error thermochimica uses for its internal tests
    required_submodule = 'contrib/thermochimica'
  []

  [FeTiVO_csv]
    type = CSVDiff
    input = FeTiVO.i
    csvdiff = FeTiVO_out_Fe2O3_0001.csv
    ignore_columns = 'id'
    design = 'ChemicalCompositionAction.md ThermochimicaNodalData.md'
    issues = '#24552'
    requirement = 'The system shall be able to output moles of pairs for MQMQA phase species'
    cli_args = 'ChemicalComposition/thermo/output_species_unit=moles Outputs/csv=true'

    rel_err = 1e-3 # this is the same error thermochimica uses for its internal tests
    required_submodule = 'contrib/thermochimica'
  []

  [tunit_error]
    type = RunException
    input = csv_ic.i
    expect_err = "The temperature unit must be specified for Thermochimica objects to be constructed"
    cli_args = "ChemicalComposition/punit=atm ChemicalComposition/munit=moles "
               "ChemicalComposition/output_species_unit=moles"
    issues = '#26376'
    requirement = 'The system shall throw an error if the temperature unit is not specified'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []
  [punit_error]
    type = RunException
    input = csv_ic.i
    expect_err = "The pressure unit must be specified for Thermochimica objects to be constructed"
    cli_args = "ChemicalComposition/tunit=K ChemicalComposition/munit=moles "
               "ChemicalComposition/output_species_unit=moles"
    issues = '#26376'
    requirement = 'The system shall throw an error if the pressure unit is not specified'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []
  [munit_error]
    type = RunException
    input = csv_ic.i
    expect_err = "The mass unit must be specified for Thermochimica objects to be constructed"
    cli_args = "ChemicalComposition/tunit=K ChemicalComposition/punit=atm "
               "ChemicalComposition/output_species_unit=moles"
    issues = '#26376'
    requirement = 'The system shall throw an error if the mass unit is not specified'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []
  [op_munit_error]
    type = RunException
    input = csv_ic.i
    expect_err = "Output mass unit must be specified for Thermochimica user object to be constructed"
    cli_args = "ChemicalComposition/tunit=K ChemicalComposition/punit=atm "
               "ChemicalComposition/munit=moles"
    issues = '#26376'
    requirement = 'The system shall throw an error if the output mass unit is not specified when species amount or amount of element in phase is requested'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []

  [separator_error1]
    type = RunException
    input = MoRu.i
    expect_err = "No ':' separator found in variable 'HCPN_Mo'"
    cli_args = "GlobalParams/output_species='BCCN:Mo HCPN_Mo BCCN:Ru HCPN:Ru'"
    issues = '#23865'
    requirement = 'The system shall throw an error if an invalid output species format is detected'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []
  [separator_error2]
    type = RunException
    input = MoRu.i
    expect_err = "No ':' separator found in variable 'mu_Ru'"
    cli_args = "GlobalParams/output_element_potentials='mu:Mo mu_Ru'"
    issues = '#23865'
    requirement = 'The system shall throw an error if an invalid element potential format is detected'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []

  [invalid_element]
    type = RunException
    input = MoRu.i
    expect_err = "Element 'Xxx' was not found in the database."
    cli_args = "GlobalParams/elements='Xxx Mo Ru'"
    issues = '#23865'
    requirement = 'The system shall throw an error if an invalid element is specified'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []

  [wrong_species1]
    type = RunException
    input = MoRu.i
    expect_err = "Species 'Xe' was not found in the simulation."
    cli_args = "GlobalParams/output_species='BCCN:Mo HCPN:Xe BCCN:Ru HCPN:Ru'"
    issues = '#23865 #24269'
    requirement = 'The system shall throw an error if a species absent from the database is specified for species output'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []
  [wrong_species2]
    type = RunException
    input = MoRu.i
    expect_err = "Phase 'HCCN' of output species 'HCCN:Mo' not found in the simulation."
    cli_args = "GlobalParams/output_species='BCCN:Mo HCCN:Mo BCCN:Ru HCPN:Ru'"
    issues = '#23865 #24269'
    requirement = 'The system shall throw an error if a wrong phase name of a species is specified for species output'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []

  [wrong_element1]
    type = RunException
    input = MoRu.i
    expect_err = "Element 'W' was not found in the simulation."
    cli_args = "GlobalParams/output_element_potentials='mu:Mo mu:W'"
    issues = '#23865'
    requirement = 'The system shall throw an error if an element absent from the simulation is specified for chemical potential output'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []

  [wrong_phase]
    type = RunException
    input = MoRu.i
    expect_err = "Phase 'RandomPhase' was not found in the simulation."
    cli_args = "GlobalParams/output_phases='BCCN HCPN RandomPhase' "
               "UserObjects/data/output_phases='BCCN HCPN RandomPhase'"
    issues = '#24269'
    requirement = 'The system shall throw an error if a phase absent from the simulation is specified for phase output'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []

  [wrong_vapor_pressure1]
    type = RunException
    input = MoRu.i
    expect_err = "No ':' separator found in variable 'vp/HCPN/Mo'"
    cli_args = "GlobalParams/output_vapor_pressures='vp/HCPN/Mo'"
    issues = '#24269 #24552'
    requirement = 'The system shall throw an error if a gas phase species name is not in correct format'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []

  [wrong_vapor_pressure2]
    type = RunException
    input = MoRu.i
    expect_err = "Phase 'HCPN' of vapor species 'vp:HCPN:Mo' is not a gas phase. Cannot calculate "
                 "vapor pressure."
    cli_args = "GlobalParams/output_vapor_pressures='vp:HCPN:Mo'"
    issues = '#24269'
    requirement = 'The system shall throw an error if a species in a phase other than the gas phase is specified for vapor pressure output'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []

  [wrong_vapor_pressure3]
    type = RunException
    input = MoRu.i
    expect_err = "Species 'Xe' was not found in the gas phase."
    cli_args = "GlobalParams/output_vapor_pressures='vp:gas_ideal:Xe'"
    issues = '#24269'
    requirement = 'The system shall throw an error if a species not present in gas phase is specified for vapor pressure output'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []

  [wrong_datafile]
    type = RunException
    input = MoRu.i
    expect_err = "Thermochimica data file cannot be parsed. 6"
    cli_args = "ChemicalComposition/thermo/thermofile='SomeRandomFile.dat'"
    issues = '#24552'
    requirement = 'The system shall throw an error if the wrong datafile is specified'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []

  [option_all]
    type = Exodiff
    input = csv_ic_all.i
    exodiff = csv_ic_all_out.e
    design = ChemicalCompositionAction.md
    issues = '#24552'
    requirement = 'The system shall be able to handle ALL option for elements by using all database elements'

    rel_err = 1e-3 # this is the same error thermochimica uses for its internal tests
    required_submodule = 'contrib/thermochimica'
  []

  [wrong_element_phase1]
    type = RunException
    input = MoRu.i
    expect_err = "Phase 'Rand' of 'ep:Rand:Mo' not found in the simulation."
    cli_args = "GlobalParams/output_element_phases='ep:Rand:Mo'"
    issues = '#24552'
    requirement = 'The system shall throw an error if a wrong phase name is specified'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []

  [wrong_element_phase2]
    type = RunException
    input = MoRu.i
    expect_err = "Element 'W' was not found in the simulation."
    cli_args = "GlobalParams/output_element_phases='ep:BCCN:W'"
    issues = '#24552'
    requirement = 'The system shall throw an error if a wrong element name is specified'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []

  [wrong_element_phase3]
    type = RunException
    input = MoRu.i
    expect_err = "No ':' separator found in variable 'vpgas_idealXe'"
    cli_args = "GlobalParams/output_element_phases='vpgas_idealXe'"
    issues = '#24552'
    requirement = 'The system shall throw an error if the output elements in phase do not have enough tokens'
    design = ChemicalCompositionAction.md

    required_submodule = 'contrib/thermochimica'
  []
[]
