//* This file is part of the MOOSE framework
//* https://www.mooseframework.org
//*
//* All rights reserved, see COPYRIGHT for full restrictions
//* https://github.com/idaholab/moose/blob/master/COPYRIGHT
//*
//* Licensed under LGPL 2.1, please see LICENSE for details
//* https://www.gnu.org/licenses/lgpl-2.1.html

#pragma once

#include "Material.h"
#include "DerivativeMaterialInterface.h"
#include "MathUtils.h"

/**
 * Computes heat conduction compliance derivative with respect to a variable contained in a parsed
 * material. This material can be used to optimize a system thermal compliance objective function
 * via the Solid Isotropic Material Penalization (SIMP) approach.
 */
class ThermalSensitivity : public DerivativeMaterialInterface<Material>
{
public:
  static InputParameters validParams();

  ThermalSensitivity(const InputParameters & parameters);

  virtual void computeQpProperties() override;

protected:
  /// Base name of the material system
  const std::string _base_name;

  /// Sensitivity material generated by this object
  MaterialProperty<Real> & _sensitivity;
  /// Pseudo-density defining material interpolation
  const VariableValue & _design_density;
  /// Name for the pseudo-density variable
  const MaterialPropertyName _design_density_name;
  /// Temperature gradient vector
  const VariableGradient & _grad_temperature;
  ///Thermal conductivity material
  const MaterialProperty<Real> & _thermal_conductivity;
  /// Derivative with respect to pseudo-density obtained via derivative parsed material
  const MaterialProperty<Real> & _dTdp;
};
